 class Game {   constructor() {    this.missed = 0;    this.phrases = [        new Phrase("Are you throwing a shoe?"),        new Phrase("You need to stop"),        new Phrase("Stop hitting me!"),        new Phrase("You need a shower"),        new Phrase("For the love of god!"),        new Phrase("I can not believe it."),        new Phrase("My house is getting dirty."),        new Phrase("I do not understand"),        new Phrase("Is it expired."),        new Phrase("Santa is not real."),        new Phrase("I love ice cream."),        new Phrase("I am not doing this.")    ];    this.activePhrase = null;   }   startGame() {     $('#overlay').hide();     const header = document.querySelector(".header");     header.className ="";     header.className += "header animate-pop-in";     this.activePhrase = new Phrase(this.getRandomPhrase());     return this.activePhrase.addPhraseToDisplay();   }     getRandomPhrase() {     let randomIndex= Math.floor(Math.random()*(this.phrases.length));     return this.phrases[randomIndex].phrase;    }      handleInteraction(event) {     if(event.target.className === "key") {      const keyButton = event.target;      keyButton.setAttribute("disabled", true);      if(game.activePhrase.checkLetter(keyButton.textContent) === false) {        keyButton.className += " wrong";        return game.removeLife();      } else {        keyButton.className += " chosen";        game.activePhrase.showMatchedLetter(keyButton.textContent);        if(game.checkForWin() === true){          return game.gameOver()        };      }    } else {      const pressedKey = (event.key);      const keyboard = document.querySelectorAll( "#qwerty button");      keyboard.forEach(key => {        if(key.innerHTML === pressedKey) {          key.setAttribute("disabled", true);          if(game.activePhrase.checkLetter(pressedKey) === false) {            key.className += " wrong";            return game.removeLife();          } else {            key.className += " chosen";            game.activePhrase.showMatchedLetter(pressedKey);            if(game.checkForWin() === true) {              return game.gameOver();            }          }        }      })    }   };      removeLife() {    const lifeHearts = document.querySelectorAll(".tries img");    lifeHearts[this.missed].src = "images/lostHeart.png";   this.missed += 1;    if(this.missed === 5) {      return game.gameOver();    }   }      checkForWin() {     let hiddenLis = document.querySelectorAll(".hide");     if(hiddenLis.length === 0){       return true     }   }    gameOver() {    const gameOverMsg = document.querySelector('#game-over-message');    const overlay = document.querySelector('#overlay');    const gameBtn = document.querySelector('#btn__reset');    const header = document.querySelector(".header");    header.className = "";    header.className += "header animate-pop-out";      if(this.missed === 5) {      gameOverMsg.textContent = `You lost. '${this.activePhrase.phrase.toUpperCase()}'...`;      overlay.className = "lose animate-pop-in";    } else {      gameOverMsg.textContent = `Winner! '${this.activePhrase.phrase.toUpperCase()}'...`;      overlay.className = "win animate-pop-in";    }    gameBtn.textContent = "Would You Like Play Again";    $('#overlay').fadeIn();    this.missed = 0;    this.activePhrase = null;    const phraseUl = document.querySelector("ul");    phraseUl.innerHTML = "";    const keys = document.querySelectorAll(".key");    keys.forEach(key => {      key.className = "key";      key.removeAttribute("disabled");    })    const lifeHearts = document.querySelectorAll(".tries img");    lifeHearts.forEach(lifeHeart => {      lifeHeart.src = "images/liveHeart.png";    })   } }